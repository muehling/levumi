<div class="mt-4">
  <label>In welcher Stadt wurden Sie geboren?</label>
  <input
    type="text"
    class="form-control"
    id="securityQuestion"
    placeholder="Antwort auf die Sicherheitsfrage"
    aria-describedby="security-answer" />
  <small id="security-answer" class="form-text text-muted">
    Bitte beachten Sie Groß- und Kleinschreibung bei der Antwort!
  </small>
  <br />
  <button class="btn btn-primary mt-4" id="security-check">Passwort anfordern</button>
</div>
<div class="card-body" id="hiddenAccess" style="display: none"></div>
<div id="verification-result">
  <p class="alert alert-success mt-4" id="hidden-password" style="display: none"></p>
</div>

<script type="module" id="recover-script">
  const retrievePassword = async () => {
    const email = document.getElementById('email-input').value
    const security = document.getElementById('securityQuestion').value
    const recovery_key = document.getElementById('verificationCode').value
    const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content')

    const key = await fetch('/recovery_key_verification', {
      method: 'POST',
      headers: {
        Accept: 'application/json',
        'X-Requested-With': 'XMLHttpRequest',
        'Content-Type': 'application/json',
        'X-CSRF-Token': csrfToken,
      },
      body: JSON.stringify({ user: { email, recovery_key } }),
    })

    if (key.status === 200) {
      const data = await key.json()
      let password

      try {
        password = sjcl.decrypt(security, data.security_digest)
        if (password) {
          const hiddenPassword = document.getElementById('hidden-password')
          hiddenPassword.innerHTML = `Ihr Passwort lautet <p class="my-4"><strong>${password}</strong></p>Sie können sich damit auf der <a href="/">Startseite</a> einloggen. Aus Sicherheitsgründen sollten Sie danach Ihr Passwort in Ihrem Benutzerprofil ändern.`
          hiddenPassword.classList.add('alert-success')
          hiddenPassword.classList.remove('alert-danger')
          hiddenPassword.style.display = 'block'

          await fetch('/delete_used_recovery_key', {
            method: 'POST',
            headers: {
              Accept: 'application/json',
              'X-Requested-With': 'XMLHttpRequest',
              'Content-Type': 'application/json',
              'X-CSRF-Token': csrfToken,
            },
            body: JSON.stringify({ user: { email } }),
          })
        }
      } catch (e) {
        const hiddenPassword = document.getElementById('hidden-password')
        hiddenPassword.textContent = 'Die Sicherheitsfrage wurde nicht richtig beantwortet!'
        hiddenPassword.classList.remove('alert-success')
        hiddenPassword.classList.add('alert-danger')
        hiddenPassword.style.display = 'block'
      }
    }
  }

  document.getElementById('security-check').addEventListener('click', retrievePassword)
</script>
